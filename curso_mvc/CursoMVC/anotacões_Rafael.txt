--Curso MVC

No Package Manager Console rode os comandos abaixo:

Install-Package Microsoft.EntityFrameworkCore.SqlServer
Install-Package Microsoft.EntityFrameworkCore.Tools

Depois de criado o Context, Build e rode o comando abaixo para criar o migration e coloque o nome como InitialCreate:
Add-Migration InitialCreate

Ele vai criar a pasta Migrations com o historico e um Snapshot.

Rode o comando o Update-DataBase para criar o banco de dados:
Update-DataBase

Rode o comando:

Install-Package Microsoft.VisualStudio.Web.CodeGeneration.Design -Version 3.0.0

Depois de criar o model de Produtos:

Add-Migration TabelaProduto
Update-DataBase

--Curso API
Criar o projeto App Asp.Net Core Web API
Instalar pacote Swagger - Swashbuckle.AspNetCore
Na startup:
	add na ConfigureServices :
		services.AddSwaggerGen(c => { c.SwaggerDoc(name: "v1", new OpenApiInfo { Title = "Curso API", Version = "v1" }); });
	no metodo Configure add os middleware do swagger:
			app.UseSwagger();
            app.UseSwaggerUI(c => { c.SwaggerEndpoint(url: "/swagger/v1/swagger.json", name: "Curso API"); });
		

--Projeto de teste
Criar um projeto do tipo xUnit Test Project - .NET Core
coloque as referencias os dois projetos o do MVC e o de API
Instale os nuggets da mesma versao: 
Microsoft.EntityFrameworkCore.SqlServer
Microsoft.EntityFrameworkCore.Tools
Moq - by Daniel Cazzulino, kzu

lembre-se de no context deixar o metodo do context virtual
ex: public virtual DbSet<Categoria> Categorias { get; set; }
